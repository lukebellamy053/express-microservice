version: 2
jobs:
  build:
    environment:
      NODE_ENV: development
    docker:
      - image: circleci/node:8
    working_directory: ~/repo
    steps:
      - checkout

      # Update npm
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # Run mocha
      - run:
          name: npm test
          command: npm run test:coverage
          when: always

      # Run eslint
      - run:
          name: eslint
          command: |
            npm run lint
          when: always

      # Run coverage report for Code Climate

      - run:
          name: Setup Code Climate test-reporter
          command: |
            echo ${CC_TEST_REPORTER_ID}
            # download test reporter as a static binary
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
            ./cc-test-reporter before-build
          when: always

      - run:
          name: code-coverage
          command: |
            ./cc-test-reporter after-build -t lcov
          when: always

      # Upload results

      - store_test_results:
          path: reports

      - store_artifacts:
          path: ./reports/junit-custom.xml

      - store_artifacts:
          path: ./reports/eslint/eslint.xml

      - store_artifacts: # upload test coverage as artifact
          path: ./coverage/lcov.info
          prefix: tests